* Этапы
** INPROGRESS MVP - stateless implementation
- State "INPROGRESS" from              [2020-05-08 Пт 01:27]
- State "INPROGRESS" from "TODO"       [2020-05-08 Пт 01:27]
  
*БД*: SQLite

- [X] хранение пользователей;
- [X] хранение курсов с вложенной структурой;
- [X] интерактивная клавиатура;
- [X] отправка курсов с помощью коллбэков интерактивной клавиатуры;
- [ ] UX/UI:
  - [ ] пагинация;
  - [ ] кнопка "подняться на директорию выше"
- [ ] тесты
- [ ] клавиатура с кнопками "Курсы", "Помощь", "Донат"
- [ ] webhooks
- [ ] travis ci
- [ ] deploy
*** Приложения и модели
*Типы документов*:
- ~audio~
- ~video~
- ~document~
- ~link~
*** Болталка
**** Пагинация
- [ ] вверх
- [ ] вниз
- [ ] постранично?
Пагинацию будет не так просто реализовать, т.к. есть документы и папки
папок может быть много, документов может быть много, но документы идут после папок, поэтому все норм

Для пагинации:
1. Выбрать текущую указанную в коллбэке страницу, либо первую
2. Если на странице меньше 10 элементов, то offset будет 10 - len(nodes)
3. также в коллбэке должна быть информация о типе страницы (нода или документ)

Примерные аргументы в коллбэке
nodeID, страница которую нужно отобразить, тип страницы ("node", "document")

Разделитель аргументов ","
**** Базовый интерфейс взаимодействия.                           :ARCHIVE:

Функционал:
- ~/start~ - приветствие, помощь, инфа о донатах
- ~/courses~ - список доступных курсов (курсы у которых parent=NULL)

Этапы:
- [X] обработка коллбэков нажатия на клавиатуру;
- [X] генерация нового списка по переданным сущностям;


Типы коллбэков:
- получение следующего курса меню;
- пагинация:
  - вниз
  - вверх
  - на страницу
- получение файлов курса:
  - всех сразу
  - по одному
*** DONE Загручик курсов в Telegram
CLOSED: [2020-05-13 Ср 20:27]
- State "DONE"       from "TODO"       [2020-05-12 Вт 00:27]
- State "TODO"       from              [2020-05-11 Пн 13:42]
**** Задача
Загрузить курс, из структуры директорий создавать "листы" и "ветви"
**** Реализация
- [X] отправить тестовый файл и получить к нему id
- [X] подключиться к sqlite
- [X] функция для создания записи в БД после отправки файла

функция обработка_папки():
  для файла в папке:
    если файл == папка:
      обработка_папки(путь)
    иначе:
      обработка_файла(путь)
** TODO Statefull implementation
- State "TODO"       from              [2020-03-22 Вс 17:30]
[[https://docs.microsoft.com/ru-ru/azure/bot-service/bot-builder-concept-state?view=azure-bot-service-4.0][Какая-то статья об управлении состоянием ботов]]
** Вопросы. Ответов [1/1]
- [X] какую БД использовать (SQL или NoSQL): SQL
* Идеи
- возможность вывести структуру курса (структуру каталогов);
- бот для MOOC курсов;
- статистика обучения с графиками;
- напоминания для изучения;
- загрузка своих курсов через веб морду:
  - авторизация пользователей через tg бота перед возможностью загрузки;
  - телеграмм не может 100% гарантировать сохранность данных, поэтому лучше всего будет хранить все курсы "на своей стороне";
- к курсам в будущем могут быть присвоены тэги и категории;
- конфигуратор тестов из веб морды, например;
- оценки курса;
- комментарии;
- чат изучающих;
- Как-то привязать anki;
- related links для курса??
- аудиокниги?
* Задачи
** [#B] Разобраться с миграциями/ORM
*Задача*:
- не запускать миграции в рантайме;
- найти способ писать датамиграции (SQL?);
*Варианты*:
- отдельная утилита для запуска миграций БД
- запуск по ключу основного приложения

[[https://github.com/go-gormigrate/gormigrate][gormigrate]]
** [#B] CI/CD                                                         :epic:
* Вопросы
В: может ли быть несколько персональных чатов с одним пользователем
О:

В: в каком виде будет осуществляться отправка сторонних ссылок, например Youtube
О: 
* Журнал
** [2020-03-22 Вс] [1/1]
- [X] реализовать эхо бота с записью пользователя в БД
** [2020-05-06 Ср] - [2020-05-07 Чт] [4/4]
- [X] запустить бота через прокси;
- [X] изучить тип данных User в боте, спроектировать модель пользователя
- [X] расширить модель User в БД в соответствии с типом telebot;
- [X] обработчик команды ~/start~:
  - [X] запись пользователя в БД;
  - [X] отправка приветствия
** [2020-05-08 Пт] - [2020-05-09 Сб] [3/3]
- [X] изучить API телеграмм и узнать, какие типы документов там бывают:
  - [X] загуглить ~TGAPI~
  - [X] посмотреть обертку в go
- [X] создать и лист в БД:
  - [X] продумать поля и связи;
  - [X] изучить создание связанных записей в gorm;
  - [X] создать модели для "листа" и "ветви";
- [X] При получении команды /start также создавать в БД запись чата.
** [2020-05-10 Вс] - [2020-05-11 Пн] [3/3]
- [X] Связать ~Chat~ и ~User~ при создании;
- [X] изучить базовый синтаксис sql + sqlite3 библиотека в python;
- [X] скрипт отправки курсов в tg с и запись данных о файлах и курсах в базу;
** [2020-05-12 Вт] - [2020-05-13 Ср] [4/4]
- [X] изучить API генерации клавиатур в ~TGAPI~ и ~go-telegram-api~;
- [X] сделать интерфейс с выводом доступных курсов по команде ~/courses~ через inline keyboard;
- [X] callback handlers;
- [X] отправка документов;
** [2020-05-14 Чт] [3/3]
- [X] иконки в кнопки по типам файлов;
- [X] скрипт загрузки:
  - [X] неправильно записываются имена папок: записываются как полный путь;
  - [X] в поле Path нужно обрезать точку вначале. и courses;
- [X] разбить на файлы:
  - [X] генерация клавиатур;
  - [X] комманды;
  - [X] коллбэки;
** [2020-06-14 Вс] - [2020-06-15 Пн] [2/2]
- [X] переписать взаимодействие с БД на интерфейсы;
- [X] избавление от глобальных переменных;
** <2020-06-16 Вт> [3/13]
- [X] значек документа если не звук;
- [ ] webhooks;
- [ ] gracefull exit;
- [ ] удалить директории с файлами ~__MACOSX~ из БД;
- [ ] сортировка файлов и папок в курсе (отдельная колонка?);
- [ ] из названия директорий удалить подчеркивания;
- [ ] добавить кнопку "вверх" по директории;
- [ ] кнопка: "получить все документы курса";
- [X] изменять текущую клавиатуру вместо отправки новой;
- [ ] пагинация, навигация, не более 10 строк на странице;
- [X] изменить загрузчик python для корректного записи имени файла;
- [ ] ретраи и стратегии для ретраев для отправки сообщений;
- [ ] после проверок работоспособности загрузить курс;
